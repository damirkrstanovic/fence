---
swagger: '2.0'
info:
  description: ego API Documentation
  version: '0.01'
  title: ego Service API
  contact: {}
  license:
    name: Apache License Version 2.0
host: demo.ego.kfdrc.org
basePath: "/"
tags:
- name: auth-controller
  description: Auth Controller
- name: user-controller
  description: User Controller
- name: group-controller
  description: Group Controller
- name: application-controller
  description: Application Controller
paths:
  "/applications":
    get:
      tags:
      - application-controller
      summary: getApplicationsList
      operationId: getApplicationsListUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of applications
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - application-controller
      summary: create
      operationId: createUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - in: body
        name: applicationInfo
        description: applicationInfo
        required: true
        schema:
          "$ref": "#/definitions/Application"
      responses:
        '200':
          description: New Application
          schema:
            "$ref": "#/definitions/Application"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/applications/{id}":
    get:
      tags:
      - application-controller
      summary: get
      operationId: getUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        '200':
          description: Application Details
          schema:
            "$ref": "#/definitions/Application"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - application-controller
      summary: updateApplication
      operationId: updateApplicationUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - in: body
        name: updatedApplicationInfo
        description: updatedApplicationInfo
        required: true
        schema:
          "$ref": "#/definitions/Application"
      responses:
        '200':
          description: Updated application info
          schema:
            "$ref": "#/definitions/Application"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - application-controller
      summary: deleteApplication
      operationId: deleteApplicationUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/applications/{id}/groups":
    get:
      tags:
      - application-controller
      summary: getApplicationsGroups
      operationId: getApplicationsGroupsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of applications of group
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/applications/{id}/users":
    get:
      tags:
      - application-controller
      summary: getApplicationUsers
      operationId: getApplicationUsersUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of users of group
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/groups":
    get:
      tags:
      - group-controller
      summary: getGroupsList
      operationId: getGroupsListUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of groups
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - group-controller
      summary: createGroup
      operationId: createGroupUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - in: body
        name: groupInfo
        description: groupInfo
        required: true
        schema:
          "$ref": "#/definitions/Group"
      responses:
        '200':
          description: New Group
          schema:
            "$ref": "#/definitions/Group"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/groups/{id}":
    get:
      tags:
      - group-controller
      summary: getGroup
      operationId: getGroupUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        '200':
          description: Group Details
          schema:
            "$ref": "#/definitions/Group"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - group-controller
      summary: updateGroup
      operationId: updateGroupUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - in: body
        name: updatedGroupInfo
        description: updatedGroupInfo
        required: true
        schema:
          "$ref": "#/definitions/Group"
      responses:
        '200':
          description: Updated group info
          schema:
            "$ref": "#/definitions/Group"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - group-controller
      summary: deleteGroup
      operationId: deleteGroupUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/groups/{id}/applications":
    get:
      tags:
      - group-controller
      summary: getGroupsApplications
      operationId: getGroupsApplicationsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of applications of group
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - group-controller
      summary: addAppsToGroups
      operationId: addAppsToGroupsUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - in: body
        name: apps
        description: apps
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Add Apps to Group
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/groups/{id}/applications/{appIDs}":
    delete:
      tags:
      - group-controller
      summary: deleteAppsFromGroup
      operationId: deleteAppsFromGroupUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: appIDs
        in: path
        description: appIDs
        required: true
        type: string
      responses:
        '200':
          description: Delete Apps from Group
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/groups/{id}/users":
    get:
      tags:
      - group-controller
      summary: getGroupsUsers
      operationId: getGroupsUsersUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of users of group
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/oauth/facebook/token":
    get:
      tags:
      - auth-controller
      summary: exchangeFacebookTokenForAuth
      operationId: exchangeFacebookTokenForAuthUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: token
        in: header
        description: token
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/oauth/google/token":
    get:
      tags:
      - auth-controller
      summary: exchangeGoogleTokenForAuth
      operationId: exchangeGoogleTokenForAuthUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: token
        in: header
        description: token
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/oauth/token/public_key":
    get:
      tags:
      - auth-controller
      summary: getPublicKey
      operationId: getPublicKeyUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/oauth/token/verify":
    get:
      tags:
      - auth-controller
      summary: verifyJWToken
      operationId: verifyJWTokenUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: token
        in: header
        description: token
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/users":
    get:
      tags:
      - user-controller
      summary: getUsersList
      operationId: getUsersListUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: query
        in: query
        description: Query string compares to users Name, Email, First Name, and Last
          Name fields.
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of users
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - user-controller
      summary: create
      operationId: createUsingPOST_1
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - in: body
        name: userInfo
        description: userInfo
        required: true
        schema:
          "$ref": "#/definitions/User"
      responses:
        '200':
          description: Create new user
          schema:
            "$ref": "#/definitions/User"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/users/{id}":
    get:
      tags:
      - user-controller
      summary: getUser
      operationId: getUserUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        '200':
          description: User Details
          schema:
            "$ref": "#/definitions/User"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - user-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - in: body
        name: updatedUserInfo
        description: updatedUserInfo
        required: true
        schema:
          "$ref": "#/definitions/User"
      responses:
        '200':
          description: Updated user info
          schema:
            "$ref": "#/definitions/User"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/users/{id}/applications":
    get:
      tags:
      - user-controller
      summary: getUsersApplications
      operationId: getUsersApplicationsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of apps of user
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - user-controller
      summary: addAppsToUser
      operationId: addAppsToUserUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - in: body
        name: appIDs
        description: appIDs
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Add applications to user
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/users/{id}/applications/{appIDs}":
    delete:
      tags:
      - user-controller
      summary: deleteAppFromUser
      operationId: deleteAppFromUserUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: appIDs
        in: path
        description: appIDs
        required: true
        type: string
      responses:
        '200':
          description: Delete Applications from User
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/users/{id}/groups":
    get:
      tags:
      - user-controller
      summary: getUsersGroups
      operationId: getUsersGroupsUsingGET
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: query
        in: query
        description: query
        required: false
        type: string
      - name: limit
        in: query
        description: Results page you want to retrieve (0..N)
        required: false
        type: string
      - name: offset
        in: query
        description: Target Page number
        required: false
        type: string
      - name: sort
        in: query
        description: Field to sort on
        required: false
        type: string
      - name: sortOrder
        in: query
        description: 'Sorting order: ASC|DESC. Default order: DESC'
        required: false
        type: string
      - name: status
        in: query
        description: 'Filter by status. You could also specify filters on any field
          of the entity being queried as query parameters in this format: name=something'
        required: false
        type: string
      responses:
        '200':
          description: Page of groups of user
          schema:
            "$ref": "#/definitions/PageDTO"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - user-controller
      summary: addGroupsToUser
      operationId: addGroupsToUserUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - in: body
        name: groupIDs
        description: groupIDs
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Add groups to user
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/users/{id}/groups/{groupIDs}":
    delete:
      tags:
      - user-controller
      summary: deleteGroupFromUser
      operationId: deleteGroupFromUserUsingDELETE
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: Authorization
        in: header
        description: Authorization
        required: true
        type: string
      - name: id
        in: path
        description: id
        required: true
        type: string
      - name: groupIDs
        in: path
        description: groupIDs
        required: true
        type: string
      responses:
        '200':
          description: Delete Groups from User
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Group:
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
      status:
        type: string
  PageDTO«Application»:
    type: object
    properties:
      count:
        type: integer
        format: int64
      limit:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      resultSet:
        type: array
        items:
          "$ref": "#/definitions/Application"
  User:
    type: object
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int32
      lastLogin:
        type: string
      lastName:
        type: string
      name:
        type: string
      preferredLanguage:
        type: string
      role:
        type: string
      status:
        type: string
  PageDTO:
    type: object
    properties:
      count:
        type: integer
        format: int64
      limit:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      resultSet:
        type: array
        items:
          type: object
  PageDTO«User»:
    type: object
    properties:
      count:
        type: integer
        format: int64
      limit:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      resultSet:
        type: array
        items:
          "$ref": "#/definitions/User"
  Application:
    type: object
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
      description:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
      redirectUri:
        type: string
      status:
        type: string
  PageDTO«Group»:
    type: object
    properties:
      count:
        type: integer
        format: int64
      limit:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      resultSet:
        type: array
        items:
          "$ref": "#/definitions/Group"
